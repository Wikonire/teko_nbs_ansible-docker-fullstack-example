services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - backend_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "$POSTGRES_USER"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 10s

  backend:
    build: ../backend
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT}:3000"
    networks:
      - backend_network
    restart: always
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 10s

  nginx:
    image: nginx:latest
    container_name: my_nginx
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../nginx/index.html:/usr/share/nginx/html/index.html:ro
    networks:
      - backend_network
    restart: always

networks:
  backend_network:
    driver: bridge

